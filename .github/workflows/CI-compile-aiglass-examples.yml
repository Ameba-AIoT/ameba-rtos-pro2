name: Build AI Glass Examples

on:
  push:
    branches:
      - dev-ai-glass
    paths:
      - '.github/workflows/CI-compile-aiglass-examples.yml'
      - '.github/scripts/python/compile-aiglass-examples.py'
      - 'project/realtek_amebapro2_v0_example/scenario/ai_glass/**'
  pull_request:
    paths:
      - '.github/workflows/CI-compile-aiglass-examples.yml'
      - '.github/scripts/python/compile-aiglass-examples.py'
      - 'project/realtek_amebapro2_v0_example/scenario/ai_glass/**'

  workflow_dispatch:

jobs:
  build-examples:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download and extract toolchain
        run: |
          mkdir -p $HOME/toolchain
          curl -L https://github.com/Ameba-AIoT/ameba-toolchain/releases/download/V10.3.0-amebe-rtos-pro2/asdk-10.3.0-linux-newlib-build-3638-x86_64.tar.bz2 \
            -o $HOME/toolchain/toolchain.tar.bz2
          tar -jxvf $HOME/toolchain/toolchain.tar.bz2 -C $HOME/toolchain
          echo "$HOME/toolchain/asdk-10.3.0/linux/newlib/bin" >> $GITHUB_PATH

      - name: Install build tools on Linux
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y build-essential cmake git python3 gcc-arm-none-eabi

      - name: Grant execute permission to all mp tools executable
        run: chmod +x project/realtek_amebapro2_v0_example/GCC-RELEASE/mp/*.linux || true
        
      - name: Run build script on Linux
        run: |
          python3 .github/scripts/python/compile-aiglass-examples.py

      - name: Build complete
        run: echo "Build finished."
      
      # Upload binary file to GitHub Artifacts
      - name: Upload binary file
        uses: actions/upload-artifact@v4
        with:
          name: aiglass-example-binary
          path: project/realtek_amebapro2_v0_example/GCC-RELEASE/build/flash_ntz.bin