name: Compile Video Examples
on:
  workflow_dispatch:
  push:
    branches:
    - 'dev-multi-os'

jobs:
  build-all-examples:
    runs-on: windows-latest
    strategy:
      matrix:
        batch:
          - id: batch1
            examples: "mmf2_video_example_v1_init mmf2_video_example_v2_init mmf2_video_example_v3_init"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download MSYS2 archive
        shell: pwsh
        run: |
            $output = Join-Path "${{ runner.temp }}" "msys64_v10_3.7z"
            curl -L -o $output https://github.com/Ameba-AIoT/ameba-tool-rtos-pro2/releases/download/msys64_v10_3/msys64_v10_3.7z

      - name: Extract msys64.7z
        shell: pwsh
        run: |
            $archive = Join-Path "${{ runner.temp }}" "msys64_v10_3.7z"
            $output = Join-Path "${{ runner.temp }}" "msys64"
            & "C:\Program Files\7-Zip\7z.exe" x $archive -o"$output" -y

    #   - name: List extracted MSYS2 files
    #     shell: pwsh
    #     run: |
    #       $extractPath = Join-Path "${{ runner.temp }}" "msys64"
    #       Write-Host "Listing extracted contents in $extractPath"
    #       Get-ChildItem -Path $extractPath -Recurse | ForEach-Object {
    #         Write-Host $_.FullName
    #       }

      - name: Setup HOME directory in post-install script
        shell: pwsh
        run: |
          $msysRoot = "${{ runner.temp }}\msys64\msys64_v10_3\msys64"
          $postFile = Join-Path $msysRoot "etc\post-install\05-home-dir.post"
          $userHome = Join-Path $msysRoot "home\runneradmin"
          $homePath = $userHome.Replace("\\", "/")
          $content = @"
            HOME=$homePath
            if [ ! -d "\${HOME}" ]; then
              if mkdir -p "\${HOME}"; then
                echo "Copying skeleton files."
              fi
            fi
          "@
          Set-Content -Path $postFile -Value $content -Encoding ASCII

      - name: Launch msys2_shell.cmd once to trigger post-install
        shell: cmd
        run: |
          "${{ runner.temp }}\msys64\msys64_v10_3\msys64\msys2_shell.cmd" -defterm -no-start -shell bash -c exit

      - name: Download and install CMake
        shell: pwsh
        run: |
          $cmakeUrl = "https://github.com/Kitware/CMake/releases/download/v3.20.0-rc1/cmake-3.20.0-rc1-windows-x86_64.msi"
          $installer = Join-Path "${{ runner.temp }}" "cmake-installer.msi"
          Invoke-WebRequest -Uri $cmakeUrl -OutFile $installer
          Start-Process -FilePath msiexec.exe -ArgumentList "/i", $installer, "/quiet", "/norestart" -Wait

      - name: Append CMake path to .bashrc
        shell: pwsh
        run: |
          $bashrcPath = Join-Path "${{ runner.temp }}\msys64\msys64_v10_3\msys64\home\runneradmin" ".bashrc"
          $cmakePath = "/c/Program\ Files/CMake/bin"
          $content = "export PATH=$cmakePath:\$PATH"
          Add-Content -Path $bashrcPath -Value $content

      - name: Append toolchain path to .bashrc
        shell: pwsh
        run: |
          $bashrcPath = Join-Path "${{ runner.temp }}\msys64\msys64_v10_3\msys64\home\runneradmin" ".bashrc"
          $toolchainPath = "/asdk-10.3.0/mingw32/newlib/bin"
          $content = @"
            if [ -d \"../../asdk-10.3.0\" ]; then
              echo \"asdk-10.3.0 exist\"
              export PATH=$toolchainPath:\$PATH
            fi
          "@
          Add-Content -Path $bashrcPath -Value $content

      - name: Build examples in batch
        run: |
          $msysRoot = Join-Path "${{ runner.temp }}" "msys64\msys64_v10_3\msys64"
          $env:PATH = "$msysRoot\usr\bin;" + $env:PATH
          $examples = "${{ matrix.batch.examples }}".Split(" ")
          foreach ($example in $examples) {
            Write-Host "Building example: $example"
            & "$msysRoot\usr\bin\bash.exe" -c "sed -i 's/^\($example\)/\/\/\1/g' $GITHUB_WORKSPACE/project/realtek_amebapro2_v0_example/src/mmfv2_video_example/video_example_media_framework.c"
            & "$msysRoot\usr\bin\bash.exe" -c "sed -i 's/^\/\/\($example\)/\1/g' $GITHUB_WORKSPACE/project/realtek_amebapro2_v0_example/src/mmfv2_video_example/video_example_media_framework.c"
            $buildDir = "$GITHUB_WORKSPACE/project/realtek_amebapro2_v0_example/GCC-RELEASE/build_$example"
            if (-Not (Test-Path $buildDir)) { New-Item -ItemType Directory -Path $buildDir }
            Set-Location $buildDir
            & "$msysRoot\usr\bin\bash.exe" -c "cmake .. -G 'Unix Makefiles' -DCMAKE_TOOLCHAIN_FILE=../toolchain.cmake -DVIDEO_EXAMPLE=on"
            if ($example -match "nn") {
              & "$msysRoot\usr\bin\bash.exe" -c "cmake --build . --target flash_nn -j4"
            } else {
              & "$msysRoot\usr\bin\bash.exe" -c "cmake --build . --target flash -j4"
            }
            Copy-Item -Path "$buildDir/flash_ntz.bin" -Destination "$GITHUB_WORKSPACE/project/realtek_amebapro2_v0_example/bin_outputs/$example.bin" -Force
            & "$msysRoot\usr\bin\bash.exe" -c "make clean"
            Set-Location $GITHUB_WORKSPACE
          }
        shell: pwsh

      - name: Upload binaries artifact
        uses: actions/upload-artifact@v4
        with:
          name: video-example-windows-${{ matrix.batch.id }}
          path: project/realtek_amebapro2_v0_example/bin_outputs/*.bin